version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "${AMQP_QUEUING_PORT}:5672"
      - "${AMQP_MONITORING_PORT}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq
  customer-office:
    depends_on:
      - customer-office-db
      - rabbitmq
    build:
      dockerfile: DockerfileCustomerOffice
      context: .
    container_name: customer-office
    hostname: restaurantcustomer
    ports:
      - "${CUSTOMER_OFFICE_SERVICE_PORT}:5000"
      - "${CUSTOMER_OFFICE_SERVICE_HTTP_GATEWAY_PORT}:5100"
    environment:
      - RESTAURANT_MENU_HOST=${RESTAURANT_MENU_SERVICE_HOST}
      - RESTAURANT_MENU_PORT=${RESTAURANT_MENU_SERVICE_PORT}
      - AMQP_HOST=${AMQP_QUEUING_HOST}
      - AMQP_PORT=${AMQP_QUEUING_PORT}
      - AMQP_USERNAME=${AMQP_USERNAME}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - AMQP_ORDER_RESTAURANT_QUEUE=${AMQP_ORDER_RESTAURANT_QUEUE_NAME}
      - AMQP_ORDER_STATISTICS_QUEUE=${AMQP_ORDER_STATISTICS_QUEUE_NAME}
      - DB_PORT=${CUSTOMER_OFFICE_DB_PORT}
      - DB_HOST=${CUSTOMER_OFFICE_DB_HOST}
      - DB_NAME=${CUSTOMER_OFFICE_DB_NAME}
      - DB_USER=${CUSTOMER_OFFICE_DB_USERNAME}
      - DB_PASSWORD=${CUSTOMER_OFFICE_DB_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
  restaurant-menu:
    depends_on:
      - restaurant-menu-db
      - rabbitmq
    build:
      dockerfile: DockerfileRestaurantMenu
      context: .
    container_name: restaurant-menu
    hostname: restaurantmenu
    ports:
      - "${RESTAURANT_MENU_SERVICE_PORT}:5000"
      - "${RESTAURANT_MENU_SERVICE_HTTP_GATEWAY_PORT}:5100"
    environment:
      - CUSTOMER_OFFICE_HOST=${CUSTOMER_OFFICE_SERVICE_HOST}
      - CUSTOMER_OFFICE_PORT=${CUSTOMER_OFFICE_SERVICE_PORT}
      - AMQP_HOST=${AMQP_QUEUING_HOST}
      - AMQP_PORT=${AMQP_QUEUING_PORT}
      - AMQP_USERNAME=${AMQP_USERNAME}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - AMQP_ORDER_QUEUE=${AMQP_ORDER_RESTAURANT_QUEUE_NAME}
      - DB_PORT=${RESTAURANT_MENU_DB_PORT}
      - DB_HOST=${RESTAURANT_MENU_DB_HOST}
      - DB_NAME=${RESTAURANT_MENU_DB_NAME}
      - DB_USER=${RESTAURANT_MENU_DB_USERNAME}
      - DB_PASSWORD=${RESTAURANT_MENU_DB_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
  statistics-statistics:
    depends_on:
      - statistics-statistics-db
      - rabbitmq
    build:
      dockerfile: DockerfileStatisticsStatistics
      context: .
    container_name: statistics-statistics
    hostname: restaurantstatistics
    ports:
      - "${STATISTICS_STATISTICS_SERVICE_PORT}:5000"
      - "${STATISTICS_STATISTICS_SERVICE_HTTP_GATEWAY_PORT}:5100"
    environment:
      - RESTAURANT_MENU_HOST=${RESTAURANT_MENU_SERVICE_HOST}
      - RESTAURANT_MENU_PORT=${RESTAURANT_MENU_SERVICE_PORT}
      - AMQP_HOST=${AMQP_QUEUING_HOST}
      - AMQP_PORT=${AMQP_QUEUING_PORT}
      - AMQP_USERNAME=${AMQP_USERNAME}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - AMQP_ORDER_QUEUE=${AMQP_ORDER_STATISTICS_QUEUE_NAME}
      - DB_PORT=${STATISTICS_STATISTICS_DB_PORT}
      - DB_HOST=${STATISTICS_STATISTICS_DB_HOST}
      - DB_NAME=${STATISTICS_STATISTICS_DB_NAME}
      - DB_USER=${STATISTICS_STATISTICS_DB_USERNAME}
      - DB_PASSWORD=${STATISTICS_STATISTICS_DB_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
  customer-office-db:
    image: postgres:15.3-alpine
    restart: always
    ports:
      - "${CUSTOMER_OFFICE_DB_PORT}:5432"
    volumes:
      - customer-office-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${CUSTOMER_OFFICE_DB_USERNAME}
      - POSTGRES_PASSWORD=${CUSTOMER_OFFICE_DB_PASSWORD}
      - POSTGRES_DB=${CUSTOMER_OFFICE_DB_NAME}
  restaurant-menu-db:
    image: postgres:15.3-alpine
    restart: always
    ports:
      - "${RESTAURANT_MENU_DB_PORT}:5432"
    volumes:
      - restaurant-menu-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${RESTAURANT_MENU_DB_USERNAME}
      - POSTGRES_PASSWORD=${RESTAURANT_MENU_DB_PASSWORD}
      - POSTGRES_DB=${RESTAURANT_MENU_DB_NAME}
  statistics-statistics-db:
    image: postgres:15.3-alpine
    restart: always
    ports:
      - "${STATISTICS_STATISTICS_DB_PORT}:5432"
    volumes:
      - statistics-statistics-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${STATISTICS_STATISTICS_DB_USERNAME}
      - POSTGRES_PASSWORD=${STATISTICS_STATISTICS_DB_PASSWORD}
      - POSTGRES_DB=${STATISTICS_STATISTICS_DB_NAME}
  pgadmin:
    container_name: postgres-manager
    image: "dpage/pgadmin4:6.14"
    environment:
      GUNICORN_THREADS: 1
      PGADMIN_DEFAULT_EMAIL: ${DB_MONITORING_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_MONITORING_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - pgadmin-data:/pgadmin4/servers.json
    ports:
      - "${DB_MONITORING_PORT}:80"

volumes:
  rabbitmq-data:
  rabbitmq-logs:
  customer-office-postgres-data:
  restaurant-menu-postgres-data:
  statistics-statistics-postgres-data:
  pgadmin:
  pgadmin-data:
